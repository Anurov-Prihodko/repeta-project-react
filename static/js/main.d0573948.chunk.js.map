{"version":3,"sources":["components/TodoList/TodoList.module.css","components/TodoEditor/TodoEditor.js","components/TodoList/TodoList.js","components/Filter/Filter.js","App.js","index.js","components/TodoEditor/TodoEditor.module.css"],"names":["module","exports","TodoEditor","state","message","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","className","s","todoEditor","this","onChange","textarea","type","button","Component","TodoList","todos","onDeleteTodo","onTogleCompleted","todoList","map","id","text","completed","classNames","item","checkbox","checked","pug","onClick","Filter","App","filter","addTodo","todo","shortid","generate","deleteTodo","todoId","prevState","togleCompleted","hangeFilter","getVisibleTodos","normalizedFilter","toLocaleLowerCase","includes","getCompletedTodoCount","reduce","acc","totalTodosCount","length","completeTodosCount","visibleTodos","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0573948.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoList\":\"TodoList_todoList__34A__\",\"item\":\"TodoList_item__2g0tS\",\"completed\":\"TodoList_completed__1Ww1G\",\"pug\":\"TodoList_pug__1U7NW\",\"text\":\"TodoList_text__2WdKE\",\"checkbox\":\"TodoList_checkbox__1P63s\"};","import React, { Component } from 'react';\r\nimport s from './TodoEditor.module.css';\r\n\r\nclass TodoEditor extends Component {\r\n  state = {\r\n    message: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ message: e.currentTarget.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state.message);\r\n\r\n    this.setState({ message: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={s.todoEditor} onSubmit={this.handleSubmit}>\r\n        <textarea\r\n          value={this.state.message}\r\n          onChange={this.handleChange}\r\n          className={s.textarea}\r\n        ></textarea>\r\n        <button type=\"submit\" className={s.button}>\r\n          Сохранить\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoEditor;\r\n","import React from 'react';\nimport classNames from 'classnames';\nimport s from '././TodoList.module.css';\n\nconst TodoList = ({ todos, onDeleteTodo, onTogleCompleted }) => (\n  <ul className={s.todoList}>\n    {todos.map(({ id, text, completed }) => (\n      <li key={id} className={classNames(s.item, { [s.completed]: completed })}>\n        <input\n          type=\"checkbox\"\n          className={s.checkbox}\n          checked={completed}\n          onChange={() => onTogleCompleted(id)}\n        />\n        <p className={s.text}>{text}</p>\n        <button\n          type=\"button\"\n          className={s.pug}\n          onClick={() => onDeleteTodo(id)}\n        >\n          Удалить\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nexport default TodoList;\n","import React from 'react';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label>\r\n    Фильтр по имени\r\n    <input type=\"text\" value={value} onChange={onChange} />\r\n  </label>\r\n);\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\n\n// import Form from './components/Form';\n// import Feedback from './components/Feedback';\n// import Dropdown from './components/Dropdown';\n// import ColorPicker from './components/ColorPicker';\nimport TodoEditor from './components/TodoEditor';\nimport TodoList from './components/TodoList';\nimport Filter from './components/Filter';\n\n// const colorPickerOptions = [\n//   { label: 'red', color: '#F44336' },\n//   { label: 'green', color: '#4CAF50' },\n//   { label: 'blue', color: '#2196F3' },\n//   { label: 'grey', color: '#607D8B' },\n//   { label: 'pink', color: '#E91E63' },\n//   { label: 'indigo', color: '#3F51B5' },\n// ];\n\nclass App extends Component {\n  state = {\n    todos: [\n      { id: 'id-1', text: 'Выучить основы React', completed: false },\n      { id: 'id-2', text: 'Разобраться с React Router', completed: false },\n      { id: 'id-3', text: 'Пережить Redux', completed: false },\n      { id: 'id-4', text: 'Попробовать React Hooks', completed: false },\n    ],\n    filter: '',\n  };\n\n  addTodo = text => {\n    const todo = {\n      id: shortid.generate(),\n      text,\n      completed: false,\n    };\n\n    this.setState(({ todos }) => ({\n      todos: [todo, ...todos],\n    }));\n  };\n\n  deleteTodo = todoId => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => todo.id !== todoId),\n    }));\n  };\n\n  togleCompleted = todoId => {\n    // this.setState(prevState => ({\n    //   todos: prevState.todos.map(todo => {\n    //     if (todo.id === todoId) {\n    //       console.log('Нашли тот туду который нужно');\n    //       return {\n    //         ...todo,\n    //         completed: !todo.completed,\n    //       };\n    //     }\n    //     return todo;\n    //   }),\n    // }));\n\n    this.setState(({ todos }) => ({\n      todos: todos.map(todo =>\n        todo.id === todoId ? { ...todo, completed: !todo.completed } : todo,\n      ),\n    }));\n  };\n\n  hangeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleTodos = () => {\n    const { todos, filter } = this.state;\n\n    const normalizedFilter = filter.toLocaleLowerCase();\n\n    return todos.filter(todo =>\n      todo.text.toLocaleLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  getCompletedTodoCount = () => {\n    const { todos } = this.state;\n\n    return todos.reduce((acc, todo) => (todo.completed ? acc + 1 : acc), 0);\n  };\n\n  render() {\n    const { todos, filter } = this.state;\n\n    const totalTodosCount = todos.length;\n    const completeTodosCount = this.getCompletedTodoCount();\n    const visibleTodos = this.getVisibleTodos();\n\n    return (\n      <>\n        {/* <Form onSubmit={this.formSubmitHandler} /> */}\n        {/* <ColorPicker options={colorPickerOptions} />\n        <hr />\n        <Dropdown />\n        <hr />\n        <Feedback /> */}\n        <div>\n          <p>Всего: {totalTodosCount}</p>\n          <p>Ко-во выполненных: {completeTodosCount} </p>\n        </div>\n\n        <TodoEditor onSubmit={this.addTodo} />\n        <Filter value={filter} onChange={this.hangeFilter} />\n        <TodoList\n          todos={visibleTodos}\n          onDeleteTodo={this.deleteTodo}\n          onTogleCompleted={this.togleCompleted}\n        />\n      </>\n    );\n  }\n}\n\n// const App = () => (\n//   <>\n//     {/* <ColorPicker options={colorPickerOptions} /> */}\n//     {/* <hr />\n//     <Dropdown />\n//     <hr />\n//     <Feedback /> */}\n//   </>\n// );\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// ========================================\n// // import { string } from 'prop-types';\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoEditor\":\"TodoEditor_todoEditor__1Movr\",\"textarea\":\"TodoEditor_textarea__2s0Tb\",\"button\":\"TodoEditor_button__2bAGR\"};"],"sourceRoot":""}